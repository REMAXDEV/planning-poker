{"version":3,"sources":["libraries/mathHelper.js","components/Analytic/Analytic.js","libraries/chartHelper.js"],"names":["getMean","numArrOrObjArr","fieldName","getRound","reduce","a","b","length","num","digit","x","Math","pow","round","chartOptions","scales","yAxes","ticks","beginAtZero","display","maintainAspectRatio","Analytic","sessionName","reporter","log","useState","historyData","setHistoryData","useEffect","fetch","process","then","response","json","data","map","item","sd","array","mean","sqrt","getStandardDeviation","points","className","xOptions","yOptions","sdComparation","last20Votes","slice","last50Votes","last100Votes","chartDate","reverse","key","transformer","value","substr","labels","datasets","label","fill","backgroundColor","borderColor","tableRows","Date","time","toLocaleString","join","options","height","scope","React","memo"],"mappings":"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","file":"static/js/4.b67c619a.chunk.js","sourcesContent":["export function getMean(numArrOrObjArr, fieldName = null) {\n    if (fieldName) {\n        return getRound(numArrOrObjArr.reduce((a, b) => a + b[fieldName], 0) / numArrOrObjArr.length, 2);\n    } else {\n        return getRound(numArrOrObjArr.reduce((a, b) => a + b) / numArrOrObjArr.length, 2);\n    }\n}\n\nexport function getStandardDeviation(array) {\n    const mean = getMean(array);\n    const sd = Math.sqrt(array.map((x) => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / array.length);\n    return getRound(sd, 2);\n}\n\nexport function getRound(num, digit) {\n    const x = Math.pow(10, digit);\n    return Math.round(num * x) / x;\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { getStandardDeviation, getMean } from '../../libraries/mathHelper';\nimport reporter from '../../libraries/reporter';\nimport { createChartData } from '../../libraries/chartHelper';\n\nconst chartOptions = {\n    scales: {\n        yAxes: [{ ticks: { beginAtZero: true, display: false } }],\n    },\n    maintainAspectRatio: false,\n};\n\nfunction Analytic({ sessionName }) {\n    reporter.log('Analytic render()');\n\n    // state\n    const [historyData, setHistoryData] = useState([]);\n\n    // fetch data\n    useEffect(() => {\n        fetch(process.env.REACT_APP_ANALYTICS_URL + sessionName)\n            .then((response) => response.json())\n            .then((json) => {\n                const data = json.map((item) => {\n                    item.sd = getStandardDeviation(item.points);\n                    return item;\n                });\n                setHistoryData(data);\n            });\n    }, [sessionName]);\n\n    if (historyData.length === 0) {\n        return (\n            <div className=\"text-center\">\n                No data. This is powered by a Lambda function which has a delay due to cold start.\n            </div>\n        );\n    }\n\n    const sdComparation = {\n        last20Votes: getMean(historyData.slice(0, 20), 'sd'),\n        last50Votes: getMean(historyData.slice(0, 50), 'sd'),\n        last100Votes: getMean(historyData.slice(0, 100), 'sd'),\n    };\n    const chartDate = createChartData(\n        historyData.slice(0, 20).reverse(),\n        { key: 'time', transformer: (value) => value.substr(5, 5) },\n        { key: 'sd' }\n    );\n\n    const tableRows = historyData.map((item) => {\n        return (\n            <tr key={item.time}>\n                <td>{new Date(item.time).toLocaleString()}</td>\n                <td>{item.points.join(' , ')}</td>\n                <td>{item.sd}</td>\n            </tr>\n        );\n    });\n\n    return (\n        <div>\n            <div className=\"text-center mb-3\">\n                <div>Mean Standard Deviation: reflects the team's disagreement - the lower, the better</div>\n                <div>\n                    Last 20 Votes\n                    <span\n                        className={`badge bg-${\n                            sdComparation.last20Votes > sdComparation.last50Votes ? 'danger' : 'success'\n                        } rounded-pill mx-2`}\n                    >\n                        {sdComparation.last20Votes}\n                    </span>\n                    Last 50 Votes\n                    <span className=\"badge bg-secondary rounded-pill mx-2\">{sdComparation.last50Votes}</span>\n                    Last 100 Votes\n                    <span className=\"badge bg-secondary rounded-pill mx-2\">{sdComparation.last100Votes}</span>\n                </div>\n            </div>\n            <div className=\"mb-3\">\n                <Line data={chartDate} options={chartOptions} height={150} />\n            </div>\n            <table className=\"table table-dark table-striped text-center\">\n                <thead>\n                    <tr className=\"text-light\">\n                        <th scope=\"col\">Date &amp; Time</th>\n                        <th scope=\"col\">Votes @{sessionName}</th>\n                        <th scope=\"col\">Standard Deviation</th>\n                    </tr>\n                </thead>\n                <tbody>{tableRows}</tbody>\n            </table>\n        </div>\n    );\n}\n\nAnalytic.propTypes = {\n    sessionName: PropTypes.string,\n};\n\nexport default React.memo(Analytic);\n","export function createChartData(array, xOptions, yOptions) {\n    const output = {\n        labels: array.map((item) => {\n            return typeof xOptions.transformer === 'function'\n                ? xOptions.transformer(item[xOptions.key])\n                : item[xOptions.key];\n        }),\n        datasets: [\n            {\n                label: 'Standard Deviation',\n                data: array.map((item) => {\n                    return typeof yOptions.transformer === 'function'\n                        ? yOptions.transformer(item[yOptions.key])\n                        : item[yOptions.key];\n                }),\n                fill: false,\n                backgroundColor: 'rgba(255, 99, 132, 0.8)',\n                borderColor: 'rgba(255, 99, 132, 0.2)',\n            },\n        ],\n    };\n\n    return output;\n}\n"],"sourceRoot":""}