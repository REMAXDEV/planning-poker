{"version":3,"sources":["libraries/reporterClients/browserLogger.js","libraries/reporter.js","libraries/mathHelper.js","libraries/stringHelper.js","store/user.js","store/session.js","store/index.js","components/Header/Header.js","components/SignIn/SignIn.js","libraries/database.js","components/Player/Player.js","components/Table/Table.js","components/Cards/Cards.js","components/Utilities/Loading.js","components/Room/Room.js","libraries/playerHelper.js","hoc/WithToggle.js","components/Animation/Confetti/Confetti.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["browserLogger","prod","process","log","msg","this","console","reporter","client","getMean","numArrOrObjArr","fieldName","length","getRound","reduce","a","b","getStandardDeviation","array","mean","Math","sqrt","map","x","pow","num","digit","round","getAvgPoint","players","Object","values","filter","player","point","ucfirst","string","split","n","charAt","toUpperCase","substring","join","trimName","trim","toLowerCase","KEY_USER_NAME","KEY_SETTING_TRACK_CHEATING","userSlice","createSlice","name","initialState","userName","localStorage","getItem","trackCheating","reducers","setUserName","state","action","payload","setItem","setTrackCheating","actions","KEY_SESSION_NAME","sessionSlice","sessionName","confetti","data","showPoints","setSessionName","setData","setConfetti","configureStore","devTools","reducer","user","userReducer","session","sessionReducer","Header","useSelector","className","href","title","src","alt","SignIn","dispatch","useDispatch","history","useHistory","defaultSessionName","defaultUserName","useState","updateSessionName","updateUserName","onSubmit","event","preventDefault","push","htmlFor","type","required","id","placeholder","value","onChange","target","database","config","firebase","initializeApp","db","info","online","setPoint","ref","on","snap","val","con","onDisconnect","remove","set","cheated","update","catch","errorHandler","once","then","snapshot","res","newSessionData","time","Date","toISOString","index","connected","callbackFunc","off","goOnline","goOffline","error","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Player","cardStatus","onContextMenu","playerName","window","confirm","deletePlayer","CSSTransition","in","unmountOnExit","exit","timeout","classNames","width","areEqual","prevProps","nextProps","JSON","stringify","React","memo","Table","PlayerElems","keys","tableSize","points","Cards","userPoint","pokers","onClick","Loading","role","Analytic","lazy","Room","match","location","params","observer","search","indexOf","setShowPoints","setUserPoint","analytics","setAnalytics","sessionData","useEffect","initialize","attachListener","shouldShowVotes","getUserPoint","validPlayerArr","every","isConsistent","setTimeout","detachListener","offline","style","backgroundImage","defaultValue","clearVotes","showVotes","checked","fallback","WithToggle","WrappedComponent","statePath","forEach","key","pieces","Array","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ee2c11bd.chunk.js","sourcesContent":["const browserLogger = {\n    prod: process.env.NODE_ENV === 'production',\n    log: function (msg) {\n        if (!this.prod) console.log(msg);\n    },\n};\n\nexport default browserLogger;\n","import browserLogger from './reporterClients/browserLogger';\n\nclass Reporter {\n    constructor(client) {\n        this.client = client;\n    }\n\n    log(msg) {\n        this.client.log(msg);\n    }\n}\n\nconst reporter = new Reporter(browserLogger);\n\nexport default reporter;\n","export function getMean(numArrOrObjArr, fieldName = null) {\n    if (!numArrOrObjArr.length) {\n        return 0;\n    }\n    if (fieldName) {\n        return getRound(numArrOrObjArr.reduce((a, b) => a + b[fieldName], 0) / numArrOrObjArr.length, 2);\n    } else {\n        return getRound(numArrOrObjArr.reduce((a, b) => a + b) / numArrOrObjArr.length, 2);\n    }\n}\n\nexport function getStandardDeviation(array) {\n    const mean = getMean(array);\n    const sd = Math.sqrt(array.map((x) => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / array.length);\n    return getRound(sd, 2);\n}\n\nexport function getRound(num, digit) {\n    const x = Math.pow(10, digit);\n    return Math.round(num * x) / x;\n}\n\nexport function getAvgPoint(players) {\n    const points = Object.values(players).filter((player) => player.point && player.point > 0);\n    return getRound(getMean(points, 'point'), 1);\n}\n","export function ucfirst(string) {\n    return string\n        .split(' ')\n        .map((n) => {\n            return n.charAt(0).toUpperCase() + n.substring(1);\n        })\n        .join(' ');\n}\n\nexport function trimName(string) {\n    return (string || '').trim().toLowerCase();\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport { trimName } from '../libraries/stringHelper';\n\nconst KEY_USER_NAME = 'myName';\nconst KEY_SETTING_TRACK_CHEATING = 'trackCheating';\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        userName: localStorage.getItem(KEY_USER_NAME) || '',\n        trackCheating: !!localStorage.getItem(KEY_SETTING_TRACK_CHEATING),\n    },\n    reducers: {\n        setUserName: (state, action) => {\n            const userName = trimName(action.payload);\n            localStorage.setItem(KEY_USER_NAME, userName);\n            state.userName = userName;\n        },\n        setTrackCheating: (state, action) => {\n            localStorage.setItem(KEY_SETTING_TRACK_CHEATING, action.payload);\n            state.trackCheating = action.payload;\n        },\n    },\n});\n\nexport const { setUserName, setTrackCheating } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { trimName } from '../libraries/stringHelper';\n\nconst KEY_SESSION_NAME = 'room';\n\nexport const sessionSlice = createSlice({\n    name: 'session',\n    initialState: {\n        sessionName: localStorage.getItem(KEY_SESSION_NAME) || '',\n        confetti: false,\n        data: {\n            showPoints: 0,\n            players: {\n                // AAA: { point: -1, connected: true, cheated: false },\n                // BBB: { point: 0, connected: true, cheated: false },\n                // CCC: { point: 1, connected: true, cheated: false },\n                // DDD: { point: 2, connected: false, cheated: false },\n                // EEE: { point: 3, connected: true, cheated: true },\n                // FFF: { point: 5, connected: true, cheated: false },\n            },\n        },\n    },\n    reducers: {\n        setSessionName: (state, action) => {\n            const sessionName = trimName(action.payload);\n            localStorage.setItem(KEY_SESSION_NAME, sessionName);\n            state.sessionName = sessionName;\n        },\n        setData: (state, action) => {\n            state.data = { ...state.data, ...action.payload };\n        },\n        setConfetti: (state, action) => {\n            state.confetti = !!action.payload;\n        },\n    },\n});\n\nexport const { setSessionName, setData, setConfetti } = sessionSlice.actions;\n\nexport default sessionSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './user';\nimport sessionReducer from './session';\n\nexport default configureStore({\n    devTools: process.env.NODE_ENV === 'development',\n    reducer: {\n        user: userReducer,\n        session: sessionReducer,\n    },\n});\n","import { useSelector } from 'react-redux';\nimport { ucfirst } from '../../libraries/stringHelper';\nimport './Header.scss';\n\nfunction Header() {\n    const userName = useSelector((state) => state.user.userName);\n\n    return (\n        <nav className=\"navbar navbar-dark bg-dark __header\">\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#/\" title=\"Back To Sign In Page\">\n                    <img\n                        src=\"img/favicon-192x192.png\"\n                        alt=\"logo\"\n                        className=\"d-inline-block align-top me-2 __header__logo\"\n                    />\n                    Planning Poker\n                </a>\n                <div className=\"navbar-text\">\n                    <img className=\"__header__profile\" alt=\"profile\" src=\"img/profile.svg\" />\n                    <span className=\"ms-1\">{ucfirst(userName) || 'Guest'}</span>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Header;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setUserName } from '../../store/user';\nimport { trimName } from '../../libraries/stringHelper';\n// import style from './Header.module.scss';\n\nfunction SignIn() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const defaultSessionName = useSelector((state) => state.session.sessionName);\n    const defaultUserName = useSelector((state) => state.user.userName);\n\n    const [sessionName, updateSessionName] = useState(defaultSessionName);\n    const [userName, updateUserName] = useState(defaultUserName);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (sessionName && userName) {\n            dispatch(setUserName(userName));\n            history.push(`/${sessionName}`);\n        }\n    };\n\n    return (\n        <div className=\"py-5\">\n            <h1 className=\"mb-5 text-center text-white\">Sign In</h1>\n            <form className=\"w-50 mx-auto text-light\" onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"room\" className=\"form-label\">\n                        Session Name\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        required\n                        id=\"session_name\"\n                        name=\"session_name\"\n                        placeholder=\"e.g. avengers/fantastic4...\"\n                        value={sessionName}\n                        onChange={(event) => updateSessionName(trimName(event.target.value))}\n                    />\n                </div>\n                <div className=\"mb-4\">\n                    <label htmlFor=\"username\" className=\"form-label\">\n                        Your Nickname\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        required\n                        id=\"user_name\"\n                        name=\"user_name\"\n                        placeholder=\"Please pick a unique nickname...\"\n                        value={userName}\n                        onChange={(event) => updateUserName(trimName(event.target.value))}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\" className=\"btn btn-primary px-4\">\n                        Join Session\n                    </button>\n                    <span className=\"me-2 ms-3\">OR</span>\n                    <a className=\"text-primary\" href={`#/${sessionName}?observer`}>\n                        Join As Observer\n                    </a>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default SignIn;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport reporter from './reporter';\n\nclass FirebaseClient {\n    constructor(config) {\n        firebase.initializeApp(config);\n        this.db = firebase.database();\n        this.sessionName = '';\n        this.userName = '';\n        reporter.log('new FirebaseClient()');\n    }\n\n    initialize(sessionName, userName) {\n        console.info('DB connected');\n        this.online();\n        this.sessionName = sessionName;\n        this.userName = userName;\n        if (this.userName) {\n            this.setPoint(0);\n            // track online status\n            const connectedRef = this.db.ref('.info/connected');\n            connectedRef.on('value', (snap) => {\n                if (snap.val() === true) {\n                    const con = this.db.ref(this.sessionName + '/players/' + this.userName + '/connected');\n                    con.onDisconnect().remove();\n                    con.set(true);\n                }\n            });\n        }\n    }\n\n    setPoint(point, cheated = false) {\n        const data = {\n            '/point': point,\n            '/connected': true,\n            '/cheated': cheated,\n        };\n        this.db\n            .ref(this.sessionName + '/players/' + this.userName)\n            .update(data)\n            .catch(this.errorHandler);\n    }\n\n    clearVotes() {\n        this.db\n            .ref(this.sessionName)\n            .once('value')\n            .then((snapshot) => {\n                const res = snapshot.val();\n                const newSessionData = {\n                    time: new Date().toISOString(),\n                    showPoints: 0,\n                    players: {},\n                };\n                for (const index in res.players) {\n                    newSessionData.players[index] = {\n                        point: 0,\n                        cheated: false,\n                        connected: !!res.players[index].connected,\n                    };\n                }\n                this.db.ref(this.sessionName).set(newSessionData).catch(this.errorHandler);\n            })\n            .catch(this.errorHandler);\n    }\n\n    showVotes() {\n        this.db\n            .ref(this.sessionName + '/showPoints')\n            .set(1)\n            .catch(this.errorHandler);\n    }\n\n    deletePlayer(userName) {\n        if (userName) {\n            this.db\n                .ref(this.sessionName + '/players/' + userName)\n                .remove()\n                .catch(this.errorHandler);\n        }\n    }\n\n    attachListener(callbackFunc) {\n        this.db.ref(this.sessionName).off();\n        this.db.ref(this.sessionName).on('value', callbackFunc);\n        console.info('Watching session: ' + this.sessionName);\n    }\n\n    detachListener() {\n        this.db.ref(this.sessionName).off();\n        this.db.ref('.info/connected').off();\n        console.info('Detach listener: ' + this.sessionName);\n    }\n\n    online() {\n        this.db.goOnline();\n    }\n\n    offline() {\n        console.info('DB disconnected');\n        this.db.goOffline();\n    }\n\n    errorHandler(res) {\n        console.error(res);\n    }\n}\n\nconst database = new FirebaseClient({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport default database;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { useSelector } from 'react-redux';\nimport db from '../../libraries/database';\nimport { ucfirst } from '../../libraries/stringHelper';\nimport reporter from '../../libraries/reporter';\nimport './Player.scss';\n\nfunction Player({ name, player, showPoints }) {\n    reporter.log('Player render()');\n\n    let cardStatus = 'none';\n    if (!player.connected) {\n        cardStatus = 'offline';\n    } else if (showPoints) {\n        cardStatus = 'front';\n    } else if (player.point !== 0) {\n        cardStatus = 'back';\n    }\n\n    const user = useSelector((state) => state.user);\n    const cheated = showPoints && player.cheated && player.connected;\n\n    return (\n        <div\n            className=\"text-center __player\"\n            onContextMenu={(event) => {\n                event.preventDefault();\n                removePlayer(name);\n            }}\n        >\n            <div className=\"mx-auto __player__container\">\n                <div className=\"__player__container__warpper\">\n                    <CSSTransition\n                        in={cardStatus === 'offline'}\n                        unmountOnExit\n                        exit={false}\n                        timeout={300}\n                        classNames=\"card\"\n                    >\n                        <img src=\"img/offline.png\" />\n                    </CSSTransition>\n                    <CSSTransition\n                        in={cardStatus === 'back'}\n                        unmountOnExit\n                        exit={false}\n                        timeout={300}\n                        classNames=\"card\"\n                    >\n                        <img src=\"img/back.png\" />\n                    </CSSTransition>\n                    <CSSTransition\n                        in={cardStatus === 'front'}\n                        unmountOnExit\n                        exit={false}\n                        timeout={300}\n                        classNames=\"card\"\n                    >\n                        <img src={`img/${player.point}.png`} />\n                    </CSSTransition>\n                    {user.trackCheating && cheated && (\n                        <img src=\"img/cheat.gif\" width=\"62\" title=\"Vote has been changed. It's magic!\" />\n                    )}\n                </div>\n            </div>\n            <div className={`${user.userName === name ? 'text-warning' : ''} __player__name`}>{ucfirst(name)}</div>\n        </div>\n    );\n}\n\nfunction removePlayer(playerName) {\n    if (window.confirm('Remove player \"' + playerName + '\" ?')) {\n        db.deletePlayer(playerName);\n    }\n}\n\nfunction areEqual(prevProps, nextProps) {\n    return JSON.stringify(prevProps) === JSON.stringify(nextProps);\n}\n\nPlayer.propTypes = {\n    name: PropTypes.string,\n    player: PropTypes.object,\n    showPoints: PropTypes.bool,\n};\n\nexport default React.memo(Player, areEqual);\n","import Player from '../Player/Player';\nimport PropTypes from 'prop-types';\nimport './Table.scss';\n\nfunction Table({ players, showPoints }) {\n    const PlayerElems = Object.keys(players).map((playerName) => {\n        return <Player key={playerName} name={playerName} player={players[playerName]} showPoints={showPoints} />;\n    });\n\n    let tableSize = 'sm';\n    if (PlayerElems.length >= 9 && PlayerElems.length <= 10) {\n        tableSize = 'md';\n    } else if (PlayerElems.length >= 11) {\n        tableSize = 'lg';\n    }\n\n    return (\n        <div\n            className={`w-100 h-100 d-flex flex-wrap justify-content-around align-items-center mx-auto __table--${tableSize}`}\n        >\n            {PlayerElems}\n        </div>\n    );\n}\n\nTable.propTypes = {\n    players: PropTypes.object,\n    showPoints: PropTypes.bool,\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport db from '../../libraries/database';\nimport './Cards.scss';\n\nconst points = [0.5, 1, 2, 3, 5, 8, 13, -1];\n\nfunction Cards({ userPoint, showPoints }) {\n    const pokers = points.map((point) => {\n        return (\n            <a\n                key={point}\n                className={`__cards__card ${userPoint === point ? '__cards__card--active' : ''}`}\n                onClick={() => db.setPoint(point, userPoint !== point && showPoints)}\n                onContextMenu={() => {}}\n            >\n                <img className=\"position-relative\" src={`img/${point}.png`} alt={point} />\n            </a>\n        );\n    });\n\n    return <div className=\"d-flex justify-content-center __cards\">{pokers}</div>;\n}\n\nCards.propTypes = {\n    userPoint: PropTypes.number,\n    showPoints: PropTypes.bool,\n};\n\nexport default React.memo(Cards);\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n    );\n}\n\nexport default React.memo(Loading);\n","import React, { Suspense, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSessionName, setData, setConfetti } from '../../store/session';\nimport { setTrackCheating } from '../../store/user';\nimport { ucfirst, trimName } from '../../libraries/stringHelper';\nimport { getAvgPoint } from '../../libraries/mathHelper';\nimport { allPlayersVoted, getUserPoint, isConsistent } from '../../libraries/playerHelper';\nimport db from '../../libraries/database';\nimport reporter from '../../libraries/reporter';\nimport Table from '../Table/Table';\nimport Cards from '../Cards/Cards';\nimport Loading from '../Utilities/Loading';\nimport './Room.scss';\n\nconst Analytic = React.lazy(() => import('../Analytic/Analytic'));\n\nfunction Room({ match, location }) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // parse url\n    const sessionName = trimName(match.params.sessionName);\n    const observer = location.search.indexOf('?observer') === 0;\n    // state\n    const [showPoints, setShowPoints] = useState(false);\n    const [userPoint, setUserPoint] = useState(null);\n    const [analytics, setAnalytics] = useState(false);\n    // store\n    const sessionData = useSelector((state) => state.session.data);\n    const userName = useSelector((state) => (observer ? '' : state.user.userName));\n    const trackCheating = useSelector((state) => state.user.trackCheating);\n\n    useEffect(() => {\n        if (sessionName) {\n            dispatch(setSessionName(sessionName));\n        }\n        if (sessionName && (userName || observer)) {\n            db.initialize(sessionName, userName);\n            // listener\n            db.attachListener((snapshot) => {\n                reporter.log('Session data updated');\n                const data = snapshot.val();\n                dispatch(setData(data));\n                // points\n                const shouldShowVotes = data.showPoints ? true : allPlayersVoted(data.players);\n                setShowPoints(shouldShowVotes);\n                setUserPoint(getUserPoint(data.players, userName));\n                if (shouldShowVotes && isConsistent(data.players)) {\n                    dispatch(setConfetti(true));\n                    window.setTimeout(() => dispatch(setConfetti(false)), 5000);\n                }\n            });\n            // clean up\n            return () => {\n                db.detachListener();\n                db.offline();\n            };\n        } else {\n            history.push('/');\n        }\n    }, [dispatch, history, sessionName, userName, observer]);\n\n    return (\n        <div className=\"__room\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/img/poker-desk.jpg)` }}>\n            <div className=\"d-flex align-items-center justify-content-center __room__session\">\n                <h1 className=\"text-white mb-0\">{ucfirst(sessionName)}</h1>\n                <div className=\"ms-3 d-none\">\n                    <select className=\"form-select form-select-sm bg-light text-center\" defaultValue=\"Standard\">\n                        <option value=\"Standard\">Standard</option>\n                        <option value=\"Cheater\">Cheater</option>\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"mx-auto __room__table\">\n                <Table players={sessionData.players || {}} showPoints={showPoints} />\n            </div>\n\n            {!observer && (\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <button className=\"btn btn-secondary w-100\" onClick={() => db.clearVotes()}>\n                            Clear Votes\n                        </button>\n                    </div>\n                    <div className=\"col-8\">\n                        <Cards userPoint={userPoint} showPoints={showPoints} />\n                    </div>\n                    <div className=\"col-2\">\n                        <button className=\"btn btn-secondary w-100\" onClick={() => db.showVotes()}>\n                            {showPoints ? 'Avg = ' + getAvgPoint(sessionData.players || {}) + ' pt' : 'Show Votes'}\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {observer && (\n                <div className=\"mt-4 pt-5\">\n                    <h4 className=\"text-center text-light --with-dash\">You are an observer of this session</h4>\n                </div>\n            )}\n\n            <div className=\"mt-5 text-secondary text-center\">\n                <h4 className=\"--with-dash\">Setting &amp; Help</h4>\n                <div className=\"d-flex justify-content-center\">\n                    <div className=\"form-check form-switch mx-2\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id=\"checkboxAnalytics\"\n                            checked={analytics}\n                            onChange={(event) => setAnalytics(event.target.checked)}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"checkboxAnalytics\">\n                            Show analytics\n                        </label>\n                    </div>\n                    <div className=\"form-check form-switch mx-2\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id=\"checkboxCheating\"\n                            checked={trackCheating}\n                            onChange={(event) => dispatch(setTrackCheating(event.target.checked))}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"checkboxCheating\">\n                            Track cheating\n                        </label>\n                    </div>\n                    <div>\n                        <span className=\"ms-2 me-3\">|</span>To remove a player, right click the name\n                    </div>\n                </div>\n            </div>\n\n            {analytics && (\n                <Suspense fallback={<Loading />}>\n                    <div className=\"mt-5 text-secondary \">\n                        <h4 className=\"text-center --with-dash\">Analytics</h4>\n                        <Analytic sessionName={sessionName} />\n                    </div>\n                </Suspense>\n            )}\n        </div>\n    );\n}\n\nexport default Room;\n","export function getUserPoint(players, userName) {\n    if (!players || !players[userName]) {\n        return null;\n    }\n    return players[userName].point;\n}\n\nexport function allPlayersVoted(players) {\n    return (\n        Object.values(players).filter((player) => {\n            return player.point === 0;\n        }).length === 0\n    );\n}\n\nexport function isConsistent(players) {\n    const playerArr = Object.values(players);\n    // find out online players who voted\n    const validPlayerArr = playerArr.filter((player) => {\n        return player.connected && player.point >= 0;\n    });\n    const consistent =\n        validPlayerArr.length >= 2 &&\n        validPlayerArr[0].point > 0 &&\n        validPlayerArr.every((player) => {\n            return player.point === validPlayerArr[0].point;\n        });\n    return consistent;\n}\n","import { useSelector } from 'react-redux';\n\nfunction WithToggle(WrappedComponent, statePath) {\n    const NewComponent = () => {\n        const shouldDisplay = useSelector((state) => {\n            let value = state;\n            statePath.split('.').forEach((key) => (value = value[key]));\n            return value;\n        });\n\n        return shouldDisplay ? <WrappedComponent /> : null;\n    };\n\n    return NewComponent;\n}\n\nexport default WithToggle;\n","import WithToggle from '../../../hoc/WithToggle';\nimport './Confetti.scss';\n\nfunction Confetti() {\n    const pieces = [...Array(20).keys()].map((index) => <div key={index} className=\"__confetti__piece\"></div>);\n    return <div className=\"__confetti\">{pieces}</div>;\n}\n\nexport default WithToggle(Confetti, 'session.confetti');\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport SignIn from '../SignIn/SignIn';\nimport Room from '../Room/Room';\nimport Confetti from '../Animation/Confetti/Confetti';\n// import Confetti from '../Animation/Fireworks/Fireworks';\nimport './App.scss';\n\nfunction App() {\n    return (\n        <div className=\"mx-auto shadow position-relative __app\">\n            <Router>\n                <Header />\n                <div className=\"position-relative\">\n                    <Switch>\n                        <Route path=\"/\" exact component={SignIn} />\n                        <Route path=\"/:sessionName\" component={Room} />\n                    </Switch>\n                </div>\n                <Confetti />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}